xPSR, Combined Program Status Register
The combined Program Status Register (PSR) provides information about program
execution and the ALU flags. It consists of the following three PSRs (Figure 4.4):

Application PSR (APSR),
Interrupt PSR (IPSR), and
Execution PSR (EPSR)

|31|30|29|28|27|26:20|19:_16|4:0|
| N| Z| C| V| Q|     |      |   |

The APSR contains the ALU flags: 
N (negative flag), 
Z (zero flag), 
C (carry or borrow flag), 
V (overflow flag). These bits are at the top 4 bits of the APSR. 
The common use of these flags is to control conditional branches.

The IPSR contains the current executing ISR (Interrupt Service Routine) number. Each exception on the Cortex-M0/M0þ processor has a unique associated ISR number (exception type). This is useful for identifying the current interrupt type during debugging and allows an exception handler that is shared by several exceptions to know which exception it is serving.
The EPSR on the Cortex-M0/M0þ processor contains the T bit which indicates that the processor is in the Thumb state. On the Cortex-M0/M0þ processor, this bit is normally set to 1 because the Cortex-M processors only support Thumb state. If this bit is cleared, a HardFault exception will be generated in the next instruction execution.

These three registers can be accessed as one register called xPSR. For example, when an interrupt takes place, the xPSR is one of the registers that is stored on to the stack memory automatically and restored automatically after returning from an exception. During the stack store and restore, the xPSR is treated as one register (Figure 4.5).
