Cosas que se pueden concluir respecto a la CIAA:

- Encontre solo dos implementaciones medianamente concretas en la pagina, 1 para control de motores, 2 para tracking de vehiculos.
- El firmware de la ciaa respecto a de pridolfi y el del seminario, solo comparten que utilizan lcpopen a nivel driver.
- el ciaa firm a nivel api es mas similar a linux ya que utliza funciones y filosofia unix a travez del standar posix.
- El ciaa firm esta completamente desarrollado en free OSEK que hasta el momento no tenemos idea como se usa y hasta la app mas sencilla es imposible de entender.
- La doc del ciaa firm tiene bastantes huecos pero esta completa. Las funciones de test estan hechas aparte y utilizan las funciones/archivos mocks. Intente
compilar los de parte posix y no funciona ninguno, dan errores desde el term.
- El complilador me funciona bien si ejecuto los cmd desde la terminal, eclipse no puede y no dice porque.
- Existen ponchos para wifi y ethernet para el edu ciaa pero parace que hay que fabricarlos.
- Existen librerias para usar el puerto usb para usar como puerto hdmi, en conjunto con un conversor usb/hdmi. Hay que ver cuanto recurso consume.
- Existe una libreria para usar un par de gpio puerto vga. En principio se lo ve lento. Ver si utliza el ARM M0 como uC dedicado. Podria funcionar.
- Existe un soporte de creacion de estructuras de archivos .h y .c pero no tengo idea de como funciona aun. Serviria si tengo armado ciertas estructura del soft.


Cosas respcto a RB Pi3:
- Tiene puertos hdmi, video, ethernet, wifi, 4 usb, 40 gpio. Me sobran interfaces.
- Esta sobredimensionado si solo quiero controlar un tanque con un par de sensores.
- Usaria el standard posix lo que es mucho mas facil reutilizarlo y debugear.

Conculsiones:
- Voy a utilizar el repo de pridolfi ya que tengo las posibilidades de usar directamente la lpcopen con una leve capa intermedia y funciones api.
- Tambien tiene librerias de lpcusb open y lwip para ethernet.
- Ademas tengo la posibilidad de usar la sapi_bm en casos que no logre funcionalidad en algunos de los modulos.
- Voy a partir de las funciones basicas le lectura y escritura en algun buffer interno de los valores, dandole prioridad a la parte de se√±ales.
- Voy a usar freeRtos que esta en el repo ya que me permite trabajar con colas, semaforos y tareas, necesario para segmentar y controlar los procesos.
- Voy a tratar de hacerlo de manera los mas ordenada posible para que me permita despues hacer una migracion a ciaa firm con osek.

